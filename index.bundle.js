"use strict";(self.webpackChunktodolist_webpack=self.webpackChunktodolist_webpack||[]).push([[826],{426:(n,r,e)=>{e.d(r,{Z:()=>i});var t=e(537),o=e.n(t),a=e(645),s=e.n(a)()(o());s.push([n.id,'* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n  font-family: "Alkatra", cursive;\r\n}\r\n\r\nbody {\r\n  font-size: 16px;\r\n  background-color: rgb(216, 227, 236);\r\n}\r\n\r\nul {\r\n  list-style: none;\r\n}\r\n\r\nbutton {\r\n  cursor: pointer;\r\n  border: none;\r\n  color: #989898;\r\n  transition: 300ms;\r\n}\r\n\r\nbutton:hover {\r\n  color: black;\r\n  transform: scale(1.1);\r\n}\r\n\r\ninput {\r\n  outline: none;\r\n  border: none;\r\n}\r\n\r\nmain {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n#container {\r\n  max-width: 400px;\r\n  width: 100%;\r\n  height: auto;\r\n  background-color: #fff;\r\n  border: 1px solid #989898;\r\n  margin-top: 50px;\r\n  box-shadow:\r\n    inset 0 -3em 3em rgba(0, 0, 0, 0.1),\r\n    0 0 0 1px rgba(152, 152, 152, 0.3),\r\n    0.3em 0.3em 1em rgba(0, 0, 0, 0.3);\r\n}\r\n\r\nheader {\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 5px;\r\n  border-bottom: #989898 solid 1px;\r\n}\r\n\r\nh1 {\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n}\r\n\r\n.fa-arrows-rotate {\r\n  color: #989898;\r\n  padding-right: 5px;\r\n  font-size: 14px;\r\n}\r\n\r\n#frm-task {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-bottom: #989898 solid 1px;\r\n}\r\n\r\n#new-task {\r\n  color: #989898;\r\n  width: 100%;\r\n  padding: 5px;\r\n}\r\n\r\n.fa-square-check {\r\n  color: #989898;\r\n  padding-right: 8px;\r\n}\r\n\r\n#ul-tasks {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.li-task {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  border-bottom: #989898 solid 1px;\r\n  padding: 5px;\r\n}\r\n\r\n.txt-task {\r\n  width: 100%;\r\n  margin-left: 5px;\r\n}\r\n\r\n.completed {\r\n  text-decoration: line-through !important;\r\n  color: red !important;\r\n}\r\n\r\n.btn-drag,\r\n.btn-remove {\r\n  border: none;\r\n  padding-right: 5px;\r\n}\r\n\r\n#btn-clear {\r\n  width: 100%;\r\n  border: none;\r\n  color: #989898;\r\n  padding: 10px;\r\n  font-size: 18px;\r\n}\r\n\r\n#btn-clear:hover {\r\n  color: black;\r\n  background-color: #989898;\r\n  transform: none;\r\n}\r\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;EACtB,+BAA+B;AACjC;;AAEA;EACE,eAAe;EACf,oCAAoC;AACtC;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,YAAY;EACZ,cAAc;EACd,iBAAiB;AACnB;;AAEA;EACE,YAAY;EACZ,qBAAqB;AACvB;;AAEA;EACE,aAAa;EACb,YAAY;AACd;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,gBAAgB;EAChB,WAAW;EACX,YAAY;EACZ,sBAAsB;EACtB,yBAAyB;EACzB,gBAAgB;EAChB;;;sCAGoC;AACtC;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,mBAAmB;EACnB,8BAA8B;EAC9B,YAAY;EACZ,gCAAgC;AAClC;;AAEA;EACE,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,cAAc;EACd,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,8BAA8B;EAC9B,mBAAmB;EACnB,gCAAgC;AAClC;;AAEA;EACE,cAAc;EACd,WAAW;EACX,YAAY;AACd;;AAEA;EACE,cAAc;EACd,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,8BAA8B;EAC9B,gCAAgC;EAChC,YAAY;AACd;;AAEA;EACE,WAAW;EACX,gBAAgB;AAClB;;AAEA;EACE,wCAAwC;EACxC,qBAAqB;AACvB;;AAEA;;EAEE,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,cAAc;EACd,aAAa;EACb,eAAe;AACjB;;AAEA;EACE,YAAY;EACZ,yBAAyB;EACzB,eAAe;AACjB",sourcesContent:['* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n  font-family: "Alkatra", cursive;\r\n}\r\n\r\nbody {\r\n  font-size: 16px;\r\n  background-color: rgb(216, 227, 236);\r\n}\r\n\r\nul {\r\n  list-style: none;\r\n}\r\n\r\nbutton {\r\n  cursor: pointer;\r\n  border: none;\r\n  color: #989898;\r\n  transition: 300ms;\r\n}\r\n\r\nbutton:hover {\r\n  color: black;\r\n  transform: scale(1.1);\r\n}\r\n\r\ninput {\r\n  outline: none;\r\n  border: none;\r\n}\r\n\r\nmain {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n#container {\r\n  max-width: 400px;\r\n  width: 100%;\r\n  height: auto;\r\n  background-color: #fff;\r\n  border: 1px solid #989898;\r\n  margin-top: 50px;\r\n  box-shadow:\r\n    inset 0 -3em 3em rgba(0, 0, 0, 0.1),\r\n    0 0 0 1px rgba(152, 152, 152, 0.3),\r\n    0.3em 0.3em 1em rgba(0, 0, 0, 0.3);\r\n}\r\n\r\nheader {\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 5px;\r\n  border-bottom: #989898 solid 1px;\r\n}\r\n\r\nh1 {\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n}\r\n\r\n.fa-arrows-rotate {\r\n  color: #989898;\r\n  padding-right: 5px;\r\n  font-size: 14px;\r\n}\r\n\r\n#frm-task {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-bottom: #989898 solid 1px;\r\n}\r\n\r\n#new-task {\r\n  color: #989898;\r\n  width: 100%;\r\n  padding: 5px;\r\n}\r\n\r\n.fa-square-check {\r\n  color: #989898;\r\n  padding-right: 8px;\r\n}\r\n\r\n#ul-tasks {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.li-task {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  border-bottom: #989898 solid 1px;\r\n  padding: 5px;\r\n}\r\n\r\n.txt-task {\r\n  width: 100%;\r\n  margin-left: 5px;\r\n}\r\n\r\n.completed {\r\n  text-decoration: line-through !important;\r\n  color: red !important;\r\n}\r\n\r\n.btn-drag,\r\n.btn-remove {\r\n  border: none;\r\n  padding-right: 5px;\r\n}\r\n\r\n#btn-clear {\r\n  width: 100%;\r\n  border: none;\r\n  color: #989898;\r\n  padding: 10px;\r\n  font-size: 18px;\r\n}\r\n\r\n#btn-clear:hover {\r\n  color: black;\r\n  background-color: #989898;\r\n  transform: none;\r\n}\r\n'],sourceRoot:""}]);const i=s},645:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e="",t=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),t&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=n(r),t&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(n,e,t,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var s={};if(t)for(var i=0;i<this.length;i++){var A=this[i][0];null!=A&&(s[A]=!0)}for(var c=0;c<n.length;c++){var d=[].concat(n[c]);t&&s[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),e&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=e):d[2]=e),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),r.push(d))}},r}},537:n=>{n.exports=function(n){var r=n[1],e=n[3];if(!e)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */");return[r].concat([a]).join("\n")}return[r].join("\n")}},379:n=>{var r=[];function e(n){for(var e=-1,t=0;t<r.length;t++)if(r[t].identifier===n){e=t;break}return e}function t(n,t){for(var a={},s=[],i=0;i<n.length;i++){var A=n[i],c=t.base?A[0]+t.base:A[0],d=a[c]||0,l="".concat(c," ").concat(d);a[c]=d+1;var p=e(l),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)r[p].references++,r[p].updater(u);else{var f=o(u,t);t.byIndex=i,r.splice(i,0,{identifier:l,updater:f,references:1})}s.push(l)}return s}function o(n,r){var e=r.domAPI(r);return e.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;e.update(n=r)}else e.remove()}}n.exports=function(n,o){var a=t(n=n||[],o=o||{});return function(n){n=n||[];for(var s=0;s<a.length;s++){var i=e(a[s]);r[i].references--}for(var A=t(n,o),c=0;c<a.length;c++){var d=e(a[c]);0===r[d].references&&(r[d].updater(),r.splice(d,1))}a=A}}},569:n=>{var r={};n.exports=function(n,e){var t=function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}r[n]=e}return r[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},565:(n,r,e)=>{n.exports=function(n){var r=e.nc;r&&n.setAttribute("nonce",r)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var r=n.insertStyleElement(n);return{update:function(e){!function(n,r,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),r.styleTagTransform(t,n,r.options)}(r,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},589:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}},296:(n,r,e)=>{class t{constructor(n,r=!1,e=0){this.description=n,this.completed=r,this.index=e}}const o=new class{constructor(){this.tasks=JSON.parse(localStorage.getItem("tasks"))||[]}addTask(n){const r=new t(n,!1,this.tasks.length+1);this.tasks.push(r),this.save()}removeTask(n){return 0===this.tasks.length?-1:(this.tasks.splice(n,1),this.orderTasks(),this.save(),0)}updateTask(n,r){this.tasks[n].description=r,this.save()}toggleTask(n){this.tasks[n].completed=!this.tasks[n].completed,this.save()}save(){localStorage.setItem("tasks",JSON.stringify(this.tasks))}orderTasks(){for(let n=0;n<this.tasks.length;n+=1)this.tasks[n].index=n+1}};function a(){const n=document.getElementById("ul-tasks");n.innerHTML="",o.tasks.forEach(((r,e)=>{const t=document.createElement("li"),s=document.createElement("input");s.type="text",s.value=r.description,s.classList.add("txt-task"),s.addEventListener("focusout",(()=>{!function(n,r,e,t){const o=t.value.trim();""!==o&&(n.updateTask(e,o),r())}(o,a,e,s)}));const i=document.createElement("input");t.classList.add("li-task"),i.classList.add("complete"),i.type="checkbox",i.checked=r.completed,i.addEventListener("click",(()=>{!function(n,r,e){n.toggleTask(e),r()}(o,a,e)}));const A=document.createElement("button"),c=document.createElement("i");c.classList.add("fa-regular"),c.classList.add("fa-trash-can"),A.classList.add("btn-remove"),A.addEventListener("click",(()=>{!function(n,r,e){n.removeTask(e),r()}(o,a,e)})),r.completed?s.classList.add("completed"):s.classList.remove("completed"),A.appendChild(c),t.appendChild(i),t.appendChild(s),t.appendChild(A),n.appendChild(t)}))}document.getElementById("frm-task").addEventListener("submit",(n=>{n.preventDefault(),function(n,r){const e=document.getElementById("new-task"),t=e.value.trim();""!==t&&(n.addTask(t),e.value="",r())}(o,a)})),function(n,r){document.getElementById("btn-clear").addEventListener("click",(()=>{n.tasks=n.tasks.filter((n=>!n.completed)),n.save(),r()}))}(o,a);var s=e(379),i=e.n(s),A=e(795),c=e.n(A),d=e(569),l=e.n(d),p=e(565),u=e.n(p),f=e(216),m=e.n(f),E=e(589),C=e.n(E),g=e(426),h={};h.styleTagTransform=C(),h.setAttributes=u(),h.insert=l().bind(null,"head"),h.domAPI=c(),h.insertStyleElement=m(),i()(g.Z,h),g.Z&&g.Z.locals&&g.Z.locals,window.onload=()=>{a()}}},n=>{n(n.s=296)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,